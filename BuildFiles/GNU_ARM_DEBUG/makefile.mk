#*******************************************************************************
#* makefile.mk
#*------------------------------------------------------------------------------
#* Makefile used to generate the Application binaries (GNU ARM format).
#* This file was automatically generated by IngeDev. Please, do not edit!
#*******************************************************************************

#-------------------------------------------------------------------------------
# General constants
#-------------------------------------------------------------------------------
EMPTY :=
SPACE := $(EMPTY) $(EMPTY)

#-------------------------------------------------------------------------------
# Project and file names
#-------------------------------------------------------------------------------
# Project name
PROJECT_NAME    := MOBILE
# Compiler version
COMPILER_VERSION	:= GNU ARM 4.3.4
# Configuration name
CFG_NAME        := GNU_ARM_DEBUG
# Target file name (without extension)
TRG_FILE_NAME   := MOBILE
# Startup object file name
STARTUP_OBJ_NAME:= cstartup.o
CGUARD_OBJ_NAME:= __ing_cguard.o
GETRAND_OBJ_NAME:= __ing_getRand_dateXORSerial.o
# Mapping file name
MAPPING_DEF_NAME:= mapping.def

#-------------------------------------------------------------------------------
# Directories
#-------------------------------------------------------------------------------
# Binaries directory
BIN_DIR         := Bin
# Object directory
OBJ_DIR         := Obj
# Build files directory
BUILD_FILES_DIR := BuildFiles

#-------------------------------------------------------------------------------
# Input files path for the current configuration
#-------------------------------------------------------------------------------
# Build files path
BUILD_FILES_PATH:= $(BUILD_FILES_DIR)/$(CFG_NAME)

#-------------------------------------------------------------------------------
# Output files path for the current configuration
#-------------------------------------------------------------------------------
# Object files path
OBJ_PATH        := $(OBJ_DIR)/$(CFG_NAME)
# Binary files path
BIN_PATH        := $(BIN_DIR)/$(CFG_NAME)

#-------------------------------------------------------------------------------
# Compiler, linker, assembler, ...
#-------------------------------------------------------------------------------
# Gnu Compiler executable
CC              := arm-elf-gcc.exe
# Gnu Assembler executable
AS              := arm-elf-as.exe
# Gnu Linker executable
LD              := arm-elf-ld.exe
# Gnu binary file transforming executable
OBJ_COPY        := arm-elf-objcopy.exe
# Gnu binary sections size executable
SIZE            := arm-elf-size.exe
# Gnu binary Obj Dump executable
OBJ_DUMP        := arm-elf-objdump.exe

#-------------------------------------------------------------------------------
# Gnu Win32 tools
#-------------------------------------------------------------------------------
# Remove tool
RM              := rm.exe -fr
# Make directory tool
MKDIR           := mkdir.exe -p
# Copy tool
CP              := cp.exe
# Printf tool
PRINTF          := printf.exe

#-------------------------------------------------------------------------------
# Includes path used in compilation process
#-------------------------------------------------------------------------------
INCLUDES_PATH   := \
-I"Inc" \
-I"E:/Program Files/SDK30/SDK 9.4.1/SDK/inc" \


#-------------------------------------------------------------------------------
# Libraries to be included during link operation
#-------------------------------------------------------------------------------
LIBS            := \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/eft30.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/trap.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/IAPP.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/AVL.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/LinkLayerExeInterface.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/SEC.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/E2EE_DLL.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/Digest.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/SEC_extend.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/dll_wifi.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/FTP_.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/SSL_.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/IP_.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/SNMP_.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/IMG_.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/TPass.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/Mifare.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/GTL.lib \
E:/Program\ Files/SDK30/SDK\ 9.4.1/SDK/lib_gnu_434/libcpatch.o \

#-------------------------------------------------------------------------------
# System libraries to be included during link operation
#-------------------------------------------------------------------------------
SYSTEM_LIBS     := \
-L E:/Program\ Files/Ingenico/IngeDev_7/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v434_7.14.0.0/os/win32/GNUARM/4.3.4/arm-elf/lib/thumb/soft/interwork -lsupc++ \
-L E:/Program\ Files/Ingenico/IngeDev_7/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v434_7.14.0.0/os/win32/GNUARM/4.3.4/arm-elf/lib/thumb/soft/interwork -lc \
-L E:/Program\ Files/Ingenico/IngeDev_7/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v434_7.14.0.0/os/win32/GNUARM/4.3.4/lib/gcc/arm-elf/4.3.4/thumb/soft/interwork -lgcc

#-------------------------------------------------------------------------------
# Compilation and link input files
#-------------------------------------------------------------------------------
# Mapping file location (used during link process)
MAP_DEF_LOCATION:= $(BUILD_FILES_PATH)/$(MAPPING_DEF_NAME)

#-------------------------------------------------------------------------------
# Result output files
#-------------------------------------------------------------------------------
# Binary file
BINARY_FILE     := $(BIN_PATH)/$(TRG_FILE_NAME).BIN

#-------------------------------------------------------------------------------
# Result Listing files
#-------------------------------------------------------------------------------
# Binary file
LST_FILE     := $(OBJ_PATH)/$(TRG_FILE_NAME).lst

#-------------------------------------------------------------------------------
# Intermediate files
#-------------------------------------------------------------------------------
# Result map file location
INTER_MAP_FILE  := $(OBJ_PATH)/$(TRG_FILE_NAME).map
# AXF file location
INTER_AXF_FILE  := $(OBJ_PATH)/$(TRG_FILE_NAME).axf
# ELF file location
INTER_ELF_FILE  := $(OBJ_PATH)/$(TRG_FILE_NAME).elf

#-------------------------------------------------------------------------------
# Default compiler, linker, assembler options
#-------------------------------------------------------------------------------
# Default compiler options
CC_DEF_OPTS     := -g -c -Wall -Wcast-align -mthumb-interwork -mlittle-endian -msoft-float -pipe -mcpu=arm920t -fomit-frame-pointer -fshort-enums -mstructure-size-boundary=8 -fno-builtin-fork
# Default assembler options
AS_DEF_OPTS     := --gdwarf2 -mthumb-interwork -EL -mfpu=softfpa -march=armv4t -mcpu=arm9tdmi
# Default linker options
LD_DEF_OPTS     :=  -Map $(INTER_MAP_FILE)
# Default linker options
OD_DEF_OPTS     := --disassemble --source --syms

#-------------------------------------------------------------------------------
# Specific compiler, linker, assembler options
#-------------------------------------------------------------------------------
# Specific compiler options
CC_SPEC_OPTS    := -mthumb -fno-exceptions -Os -Wuninitialized -fstack-protector-all  -D_ING_GNU_ARM_DEBUG
CC_SPEC_OPTS    +=  -D_EXPORT_ -D_EFT30_
CC_SPEC_OPTS    +=  $(INCLUDES_PATH)
# Specific assembler options
AS_SPEC_OPTS    :=   --defsym _ING_GNU_ARM_DEBUG=1
AS_SPEC_OPTS    +=  --defsym _EXPORT_=1 --defsym _EFT30_=1
AS_SPEC_OPTS    +=  $(INCLUDES_PATH)
# Specific linker options
LD_SPEC_OPTS    := 

#-------------------------------------------------------------------------------
# Compiler, linker, assembler options
# default + specific options
#-------------------------------------------------------------------------------
# Compiler options
CC_OPTS         := $(CC_DEF_OPTS) $(CC_SPEC_OPTS)
# Assembler options
AS_OPTS         := $(AS_DEF_OPTS) $(AS_SPEC_OPTS)
# Linker options
LD_OPTS         := $(LD_DEF_OPTS) $(LD_SPEC_OPTS)
#ObjDump options
OD_OPTS         := $(OD_DEF_OPTS) 

#-------------------------------------------------------------------------------
# SRC_OBJS is the list of the project object files
#-------------------------------------------------------------------------------
SRC_OBJS        := \
$(OBJ_PATH)/Main.o \
$(OBJ_PATH)/Entry.o \
$(OBJ_PATH)/Menu.o \
$(OBJ_PATH)/Display.o \
$(OBJ_PATH)/Parms.o \
$(OBJ_PATH)/UI.o \
$(OBJ_PATH)/Printer.o \
$(OBJ_PATH)/Iso8583.o \
$(OBJ_PATH)/Utils.o \
$(OBJ_PATH)/Sale.o \
$(OBJ_PATH)/Common.o \
$(OBJ_PATH)/Card.o \

#-------------------------------------------------------------------------------
# Dependencies
#-------------------------------------------------------------------------------
DEPENDENCIES    := \
$(BUILD_FILES_PATH)/makefile.mk

#===============================================================================
# Rule to make the project
#===============================================================================
#-------------------------------------------------------------------------------
# Rule for the binary files generation
#-------------------------------------------------------------------------------
$(BINARY_FILE): $(INTER_ELF_FILE) \

	$(OBJ_COPY) -O binary $(INTER_AXF_FILE) $@
	@$(PRINTF) "'$@' binary file generated.\n"

#===============================================================================
# Rule for the link process
#===============================================================================
#-------------------------------------------------------------------------------
# Rule for the axf file generation
#-------------------------------------------------------------------------------
$(INTER_AXF_FILE): $(MAP_DEF_LOCATION) $(SRC_OBJS) $(LIBS)
	@$(PRINTF) "'$@' link in progress...\n"
	@$(CP) "E:\Program Files\Ingenico\IngeDev_7\plugins\com.ingenico.ingedev.telium.core_7.14.1.0\defaultSystemFiles\Obj\gnu_arm4\$(STARTUP_OBJ_NAME)" "$(OBJ_PATH)"
	@$(CP) "E:\Program Files\Ingenico\IngeDev_7\plugins\com.ingenico.ingedev.telium.core_7.14.1.0\defaultSystemFiles\Obj\gnu_arm4\$(CGUARD_OBJ_NAME)" "$(OBJ_PATH)"
	@$(CP) "E:\Program Files\Ingenico\IngeDev_7\plugins\com.ingenico.ingedev.telium.core_7.14.1.0\defaultSystemFiles\Obj\gnu_arm4\$(GETRAND_OBJ_NAME)" "$(OBJ_PATH)"	
	$(LD) $(LD_OPTS) -T $< -o $@ $(SRC_OBJS) $(OBJ_PATH)/$(STARTUP_OBJ_NAME) $(OBJ_PATH)/$(CGUARD_OBJ_NAME) $(OBJ_PATH)/$(GETRAND_OBJ_NAME) -\( $(LIBS) -\) $(SYSTEM_LIBS)


#-------------------------------------------------------------------------------
# Rule for the elf file generation
#-------------------------------------------------------------------------------
$(INTER_ELF_FILE): $(INTER_AXF_FILE)
	$(SIZE) -A $< > $@

#===============================================================================
# Rule for the .lst Generation
#===============================================================================
$(LST_FILE): $(INTER_AXF_FILE)
	$(OBJ_DUMP) $(OD_OPTS) $<  > $@
	@$(PRINTF) "'$@' lst file generated.\n"

#===============================================================================
# Rule for the compilation process
#===============================================================================
ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Main.d
endif
$(OBJ_PATH)/Main.o: Src/Main.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Main.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Main.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Entry.d
endif
$(OBJ_PATH)/Entry.o: Src/Entry.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Entry.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Entry.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Menu.d
endif
$(OBJ_PATH)/Menu.o: Src/Menu.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Menu.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Menu.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Display.d
endif
$(OBJ_PATH)/Display.o: Src/Display.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Display.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Display.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Parms.d
endif
$(OBJ_PATH)/Parms.o: Src/Parms.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Parms.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Parms.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/UI.d
endif
$(OBJ_PATH)/UI.o: Src/UI.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/UI.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/UI.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Printer.d
endif
$(OBJ_PATH)/Printer.o: Src/Printer.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Printer.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Printer.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Iso8583.d
endif
$(OBJ_PATH)/Iso8583.o: Src/Iso8583.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Iso8583.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Iso8583.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Utils.d
endif
$(OBJ_PATH)/Utils.o: Src/Utils.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Utils.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Utils.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Sale.d
endif
$(OBJ_PATH)/Sale.o: Src/Sale.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Sale.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Sale.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Common.d
endif
$(OBJ_PATH)/Common.o: Src/Common.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Common.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Common.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Card.d
endif
$(OBJ_PATH)/Card.o: Src/Card.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'Src/Card.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Card.o)
	@$(PRINTF) "done!\n"
endif

#===============================================================================
# Rule for project name and configuration name display
#===============================================================================
.PHONY: displayInfo
displayInfo:
	@$(PRINTF) "                                     *-*-*\n"
	@$(PRINTF) "--- Project '$(PROJECT_NAME)', Configuration '$(CFG_NAME)', Compiler '$(COMPILER_VERSION)' ---\n"

#===============================================================================
# Rule for output directories creation
#===============================================================================
.PHONY: createOutputDirs
createOutputDirs:
	@$(MKDIR) "$(OBJ_PATH)"
	@$(MKDIR) "$(BIN_PATH)"

#===============================================================================
# Make build rule
#===============================================================================
.PHONY: build
build: displayInfo createOutputDirs $(BINARY_FILE)
	@$(PRINTF) "done!\n"

#===============================================================================
# Make clean rule
#===============================================================================
.PHONY: clean
clean: displayInfo
	@$(PRINTF) "deleting intermediate files...\n"
	@$(RM) "$(BINARY_FILE)"
ifneq "$(wildcard $(OBJ_PATH)/*.*)" ""
	@$(RM) "$(OBJ_PATH)/*.*"
endif
	@$(PRINTF) "done!\n"
